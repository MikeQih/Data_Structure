//找到对应软件，写完删


/*
w1:
计算机网络=通信技术+计算机技术
信源：发生信息，信宿：接收信息
通信系统模型：信源->发送设备->信道(<-噪声源)->接收设备->信宿
计算机网络就是一种通信网络

定义：计算机网络就是 互连(互联互通)的(通信链路)，自治(无主从关系)的 计算机集合

距离远，数量大：通过交换网络互联主机 (交换节点(路由器/交换机)，实现把数据从原主机送到目的主机)

全球最大的互联网络(ISP,Internet Service Provider,"网络之网络")
光靠通信链路不能连接所有主机(计算设备的集合 eg.PC，服务器，笔记本，手机)，
所以要有由路由设备构成的交换网络->实现数据的分组转发(最重要的：路由器 routers，交换机 switches)

Internet
服务角度：
为网络应用提供服务的通信基础设施 eg.Web,VoIP,email,网络游戏,电子商务,社交网络...
为网络应用提供应用编程接口(API)：支持应用程序“连接”Internet，发送/接收数据；提供类似于邮政系统的数据传输服务

仅有硬件(主机，链路，路由器。。。)，Internet还不能顺畅运行，还需要 协议
硬件只是计算机网络的基础，计网的数据交换必须遵循事先约定好的规则 (eg.马路修好了还不行，要有交通规则(协议)，才不会瘫痪)

网络协议(network protocol):简称协议，是为进行网络中的数据交换而建立的规则，标准或约定。
协议规定了通信实体间所交换消息的 格式，意义，顺序 以及针对收到信息或发生的事件所采取的“动作”(actions)。
协议三要素：
1.语法(Syntax):数据与控制信息的结构或格式；底层信息，可能定义的就是信号电平
2.语义(Semantics):需要发出何种控制信息；完成何种动作以及做出何种响应；差错控制
3.时序(Timing):事件顺序；速度匹配

协议规范了网络中所有信息发送和接收的过程 eg.TCP,IP,HTTP,Skype,802.11
Internet协议标准：RFC(Request for Comments,最权威的互联网协议的记录/描述)；IETF(Internet Engineering Task Force, 互联网工程任务组)


计算机网络结构：
网络边缘：主机；网络应用 (图上最外边的)
接入网络，物理介质：有线或无线通信链路
网络核心(核心网络)：互联的路由器(或分组转发设备)；网络之网络

主机(端系统)：位于“网络边缘”，运行网络应用程序 eg.Web，email

客户/服务器(client/server)应用模型：客户发送请求，接收服务器响应 eg.Web应用，文件传输FTP应用
主动发送请求就是客户，被动接受请求就是服务器

对等(peer-peer, P2P)应用模型：
无(或不仅依赖)专用服务器(没有绝对的客户或服务器的区分，因为大家对等)，通信/交换过程不再依赖传统意义上的专用服务器。
通信在对等的实体间直接进行 eg.Gnutella,BT,Skype,QQ

Q:如何将网络边缘接入核心网(边缘路由器)？
Ans：接入网络 住宅(家庭)接入网络，机构接入网络(学校，企业...)，移动接入网络

带宽(bandwidth)：数据传输速率(bps, bytes per second,每秒传输的字节数) (有时说带宽相当于说数据传输速率，原本指信号具有的频带宽度(Hz))

接入网络：数字用户线路(DSL)
(家庭中电话线)实现声音，数据的不同传输，DSL接入多路复用器(DSLAM)(多路信号共同使用一个物理介质进行传输)
FDM（频分复用Frequency Division Multiplexing): >50kHz-1MHz用于下行，4kHz-50kHz用于上行，0kHz-4kHz用于传统电话
频分多路复用：在不同频带(载波)上传输不同的频道。
电缆调制解调器(cable modem)
HFC(混合光纤同轴电缆，hybrid fiber coax)：共享式接入，非对称(下行高达300Mbps传输速率，上行2Mbps)
DSL是独占至中心局的接入，用户多时，HFC没有DSL快。

无线接入网络：通过共享的无线接入网络连接端系统与路由器
通过基站(base station)，或称为“接入点”(access point)
最典型的：
1.无线局域网(LANs，Local Area Networks(wifi))：同一建筑物内(30m)，11Mbps，54Mbps
2.广域无线接入(蜂窝网络)：通过电信运营商(蜂窝网)，接入范围在几十公里。带宽：1Mbps，10Mbps，100Mbps (移动互联网)

网络核心的关键功能：路由(routing:确定分组从源到目的传输路径)+转发(forwarding:将分组从路由器的输入端口交换至正确的输出端口)

Q:如何实现数据从源主机通过网络核心送达目的主机？
Ans：数据交换

===

Internet结构：网络之网络
端系统通过接入ISP(access ISPs)连接到Internet eg.家庭，公司，大学ISPs
接入ISP必须进一步互连：这样任意两个主机才可以互相发送分组
构成复杂的网络互连的网络：经济和国家政策是网络演讲的主要驱动力
当前Internet结构：无人能给出当前某一时刻的精确描述。(动态性很强，随时有网络/主机接入，随时有网络/主机离开)

每个接入ISP直接彼此互连？直接互连不适用于大规模网络(O(N^2)连接问题，技术，经济都不可行)

将每个接入ISP连接到一个国家或全球ISP？但从商业角度，会分出不同地点的ISP。
这些ISP网络必须互连 m1：对等链路(peering link) m2:IXP(Internet exchange point)
由于发展，可能出现 
1.区域网络(regional networks)连接接入ISP和运营商ISP
2.内容提供商网络(content provider networks) eg. Google,Microsoft... 运行其自身的网络，并就近为端用户提供服务，内容

在网络中心，少数互连的大型网络
“一级”(tier-1) 商业ISPs(eg.网通，电信，Sprint，AT&T)，提供国家或国际范围的覆盖
内容提供商网络(eg. Google)：私有网络，连接其数据中心与Internet，通常绕过一级ISP和区域ISPs

===

数据交换的类型：
1.电路交换 最典型：电话网络
三个阶段：建立连接(呼叫/电路建立)，通信，释放连接(拆除电路)
独占资源(只有挂机/拆除时，第三方才可以使用刚才占用的资源)
多路复用(multiplexing)：铁路/网络资源(如带宽)划分为“资源片”，将资源片分配给各路“呼叫(calls)”，每路呼叫独占分配到的资源片进行通信，资源片可能“闲置”(idle)无共享。
(电路交换网络共享中继站)(通信技术基本概念)

典型多路复用方法：
1.频分多路复用(FDM) eg.电视机频道 
2.时分多路复用(TDM) 
3.波分多路复用(WDM)(实质也是FDM) 
4.码分多路复用(CDM) 广泛应用于无线链路共享(eg.蜂窝网，卫星通信...) 每个用户分配一个唯一的m bit码片序列(chipping sequence)，“0”用“-1”表示，“1”用“+1”表示
编码信号 = 原始数据 x 码片序列。发送1(+1)，发送自己的m bit码片序列，发0(-1)，发该码片序列的反码。各用户码片序列相互正交(orthogonal)

2.报文交换：源(应用)发送信息整体 (从源一次性把(完整)报文发送到下个节点(eg.路由器)，然后再送到目的地)

3.分组交换：
分组：报文分拆出来的一系列相对较小的数据包
分组交换(package switching) 需要报文的拆分与重组，会产生额外开销(速度比报文交换块，因为是以较小的分组进行“存储-转发”)
报文:M bits，铁路带宽(数据传输速率)：R bps，分组长度(大小)：L bits，跳步数：h，路由器数：n。
T = M/R + nL/R

分组交换允许更多用户同时共享网络，资源共享率更高。适用于突发数据传输网络(简单，无需呼叫建立)；可能产生拥塞(congestion)：分组延迟和丢失(需要协议处理数据传输和拥塞控制)

w1 hw已看，还未完全懂


w2:
计算机网络性能(衡量指标)：
1.速率(即数据率data rate，或称数据传输速率/比特率，bps) 往往是指额定速率或标称速率
2.带宽(bandwith)：原本指信号具有的频带宽度(最高频率与最低频率之差，Hz)，网络的“带宽”通常是数字信道所能传送的“最高数据率“(bps)
3.延迟/时延(delay/latency)：分组在路由器缓存中排队。
分组交换出现丢包(数据的丢失)和时延的原因：1.分组在路由器缓存中排队，如缓存满，到达分组被丢弃(丢包 loss) 2.分组到达速率超出输出链路容量时 3.分组排队，等待着输出链路可用时(时延)

四种分组延迟：
1.dproc 节点处理延迟(nodal processing delay)：差错检测，确定输出链路，不会超过ms级(处理时间较少)
2.dqueue 排队延迟(queueing delay)：等待输出链路可用，取决于路由器拥塞程度 (排队时间不确定)
3.dtrans 传输延迟(transmission delay)：L(分组长度bits)，R(链路带宽bps)，dtrans=L/R  (发送一个分组需要的时间)
4.dprop 传播延迟(propogation delay)：d(物理链路长度)，s(信号传播速度 2x10^8 m/s))，dprop=d/s  (信号经过链路从一点传输到下一点的时间)
dnodal = dproc + dqueue + dtrans + dprop

时延带宽积 = 传播时延 x 带宽 (又称为以比特为单位的链路长度)
丢包率 = 丢包数/已发分组总数
吞吐量(Throughput)：表示在发送端与接收端之间传送数据速率(b/s)；即时吞吐量：给定时刻的速率；平均吞吐量：一段时间的平均速率
瓶颈链路(bottleneck link, 端到端 细 的线路)：端到端路径上，限制端到端吞吐量的链路。

计算机网络体系结构(简称 网络体系结构(network architecture))是分层结构。(从功能上描述，抽象的)
计算机网络采用分层结构的原因：
1.结构清晰，易于识别复杂系统的部件及其关系
2.模块化的分层易于系统更新，维护 (任意一层的改变对其他层无影响，透明的)
3.利于标准化
实体(entity)：任何可发送或接收信息的硬件或软件进程。
协议：控制两个对等实体进行通信的规则的集合，协议是“水平的”(同层)
任意一层实体需要使用 下层服务，遵循 本层协议，实现本层功能，向上层提供服务，服务是“垂直”的。
下层协议的实现对上层是透明的
同系统的相邻层实体间通过接口进行交互，通过服务访问点SAP(Service Access Point)，交换原语，指定请求的特定服务

OSI参考模型(7层) -> 解释网络通信过程，目的：支持异构网络系统的互联互通(理论成功，市场失败)
7.应用层(Application)
6.表示层(Presentation)
5.会话层(Session)
4.传输层(Transport)
3.网络层(Network)
2.数据链路层(Data link)
1.物理层(Physical)

4-7层称为：端-端层(end-end)，中间系统不实现(主机A - 中间系统 - 主机B)
为什么层和层间需要数据封装：
增加控制信息(构造 协议控制单元PDU)，控制信息包括：1.地址(Address) 标识发送/接收端 2.差错检测编码(Error-detecting code) 用于差错检测或纠正 3.协议控制(Protocol control) 实现协议的附加功能 eg.优先级(priority) 服务质量(QoS) 和安全控制等...

物理层功能：-> 解决单一bit传输问题
接口特性：机械特性(接口形状 eg.方形/圆形口 插口在哪侧)，电气特性(使用的电平/电压大小)，功能特性(引脚的数量和功能 eg.接地 发送数据信号...)，规程特性(接口在工作中遵从的工作/通讯过程)
比特编码
数据率(发送的速度)
比特同步(解决时钟同步)
传输模式：单工(单向传输 Simplex eg.只能A发给B)，半双工(交替双向 half-duplex 收和发不能同时进行，但可交替)，全双工(full-duplex 发出去的同时也可接收)

数据链路层功能： -> 负责节点-节点(node-to-node)数据传输
组帧(Framing)(给加头加尾 头部加一些地址信息，尾部差错检测等信息): 目的在于让接收端收到一系列比特流时，能切分成为一个个数据帧，然后根据头部和尾部信息完成协议规定的相关功能
物理寻址(Physical addressing): 在帧头中增加发送端/接收端的物理地址，标识数据帧的发送端/接收端
流量控制(Flow control)：匹配发送/接收端的发送/接收速度，避免淹没接收端
差错控制（Error control)：检测并重传损坏或丢失帧，并避免重复帧
访问(接入)控制(Access control)：在任一给定时刻决定哪个设备拥有链路(物理介质)控制使用权

网络层 -> 负责源主机到目的主机 数据分组(packet)交付
逻辑寻址(Logical addressing):全局唯一逻辑地址，确保数据分组被送达目的主机 eg.IP地址
路由(Routing):路由器互连网络，并路由分组至最终目的主机；路径选择
分组转发

传输层功能 -> 负责源->目的(端到端)，(进程间)完整报文传输
(把会话层交过来的完整的报文信息分成一个个 数据段，然后构造它的协议数据单元，并交给网络层进行传输)
分段与重组
SAP寻址:确保将完整报文提交给正确进程 eg.端口号
连接控制(逻辑上)
流量控制
差错控制

会话层 -> 对话控制(dialog controlling)(建立，维护)；同步(synchronization)(在数据流中插入“同步点”，方便出现意外时恢复到最近的控制点)
(处理表示层的协议控制单元PDU，并不对其进行分割，最多插入一些控制信息)

表示层 -> 处理两系统间信息的语法与语义(syntax and semantics)
数据表示的转化(转换为主机独立的编码)
加密/解密 (对应用层的数据)
压缩/解压缩

应用层 -> 支持用户通过用户代理(eg.浏览器)或 网络接口使用网络(服务)
典型应用层服务：HTTP：Web应用 (的应用层协议)；FTP：文件传输；SMTP：电子邮件...

TCP/IP参考模型：IP over Everything，IP可应用到各式各样的网络
应用层：HTTP...SMTP DNS...RTP
运输层：TCP, UDP
网际层：IP, ICMP, ARP...
网络接口层：网络接口1，网络接口2...(只要封装IP分组，能从一个主机/路由器 传到另个 主机/路由器就可以) Link


5层参考模型(上到下)：(综合OSI和TCP/IP的优点，应用最多)
应用层：支持各种网络应用 eg.FTP,SMTP,HTTP
传输层：进程-进程的数据传输 eg.TCP,UDP
网络层：源主机到目的主机的 数据分组路由和转发 eg.IP协议，路由协议等
链路层：相邻网络元素(主机，交换机，路由器等)的数据传输 eg.以太网(Ethernet),802.11(WiFi),PPP
物理层：bit传输

5层模型的数据封装：源主机->交换机->路由器->目的主机小



看到w2 1.6 计算机网络发展历史
8:44
*/

